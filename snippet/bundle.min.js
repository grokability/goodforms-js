(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?module.exports=factory():typeof define==="function"&&define.amd?define(factory):(global=global||self,global.MyBundle=factory())})(this,function(){"use strict";var $=require("../internals/export");var assign=require("../internals/object-assign");$({target:"Object",stat:true,forced:Object.assign!==assign},{assign:assign});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}var Log=function(){function Log(){var debug_enabled=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck(this,Log);this.debug=debug_enabled}_createClass(Log,[{key:"error",value:function error(msg){if(!this.log_at_level("error",msg)){window.alert("Error: "+msg)}}},{key:"debug",value:function debug(msg){if(this.debug){this.log_at_level("debug",msg)}}},{key:"log_at_level",value:function log_at_level(level,msg){if(console&&console[level]){console[level](msg);return true}return false}}]);return Log}();log=new Log;var Form=function Form(options){_classCallCheck(this,Form)};function verify_form(options){if(!options){Log.error("No options passed to verify()");return}return new Form(options)}function auto(form_key,options){if(!form_key){Log.error("Form key was not set");return}if(options){my_options=Object.assign({},options);my_options.form_key=form_key}else{my_options={form_key:form_key}}if(my_options.debug){Log.debug=my_options.debug;delete my_options.debug}var options_copy=options.copy();for(form in document.forms){Log.debug("Checking form: "+form+" for verifiable email address fields...");for(element in document.forms[form].elements){Log.debug("Checking field #"+element+" to see if it's an email address field");var this_field=document.forms[form].elements[element];if(this_field.type=="email"||this_field.name=="email"||this_field.id=="email"){Log.debug("Found candidate field. Name: "+this_field.name+" Type: "+this_field.type+" ID: "+this_field.id);my_options.form=document.forms[form];my_options.email_field=this_field;verify_form(my_options)}}}}var index=Something={auto:auto,verify:verify_form};return index});
